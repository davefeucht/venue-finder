Requirements:

-Optimized for phone. People will be looking up venues near them when they are out looking for somewhere to go, not primarily at home on their computer.
-User should be allowed to choose the distance radius with options of 1, 3, 5 km. This field should be required. 
-User should be allowed to enter a search string which will be searched against venue names. This should be optional. If nothing is entered, all venues are 
 searched.
-Options should be shown at the top of the page, with the list of the results shown below.
-If there are no results, it should give the user an indication that there are no results.
-A 'jump to top' button should be displayed which will return the user to the top of the page.
-Should display name, address and phone number of each venue result
-If there is a result which does not have any address or phone information, a 'No information available' text should be shown for that result
-If any errors occur while getting the user's location or making the request to Foursquare, an appropriate message should be shown

Design Choices:

-Text input box first, because primarily users are searching for a place, not a search radius. 
-Radius selection hidden at first, to give focus to the text input and give the page a clean and minimal initial layout. This will
 help the purpose/focus of the page to be clear.
-Radius selection by 'radio' button, as 'toggling' between different options is a more natural action than choosing from a dropdown list.
 Radius is validated that a value is selected, but it is 'forced' as a radio by having a value set automatically, then the user cannot unset 
 it but only change the value. 
-Radio buttons are ugly, so hide the actual input, and select it based on a click on the <label> associated with the radio input. 
-Give the label some styling so it is clear which option is selected currently.
-Perform the search automatically if the radius is changed, thus automatically updating the results.
-Page header is fixed at the top of the screen so that it stays there when the page is scrolled, so it is always clear to the user what page 
 they are looking at.
-'Back to top' button fixed at bottom right so that it stays when page is scrolled, so the user can always go back to the search form easily.
-Use jQuery for things like making HTTP requests or updating the DOM, since it adds some safety and robustness to these processes.
-Use vanilla JavaScript for things like loops for slightly better performance, since jQuery doesn't add much there.
-Use specific error classes for different types of errors so that we can easily distinguish and have a generalized "displayError" function.

Improvements:

-Make form validation more independent so that the validateFields function doesn't rely on knowing what elements are in the form
-Add swipe event handler on results so user can swipe between radius selections as well as tapping/clicking on them
-Adding indicator of 'likes' for each venue
-Add link to Google Maps search for each venue based on location
-Displaying how many people are checked in at the place currently
-Make Client Key and Client Secret not readable in the JS source
